[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "risk-pipeline"
dynamic = ["version"]
authors = [
    { name = "Selim Oksuz", email = "selimoksuz@users.noreply.github.com" }
]
description = "Production-ready risk modeling pipeline with WOE transformation"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Financial and Insurance Industry",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]

dependencies = [
    "pandas==2.0.3; python_version < '3.10'",
    "pandas==2.3.2; python_version >= '3.10'",
    "numpy==1.26.0; python_version < '3.10'",
    "numpy==1.26.4; python_version >= '3.10'",
    "scipy==1.11.4",
    "scikit-learn==1.3.2",
    "joblib==1.5.2",
    "openpyxl==3.1.5",
    "xlsxwriter==3.2.5",
    "matplotlib==3.8.4",
    "seaborn==0.13.2",
    "typer==0.9.0",
    "statsmodels==0.14.3",
    "tsfresh==0.20.1",
    "jupyter==1.1.0",
    "notebook==7.2.1",
    "ipywidgets==8.1.3",
    "lightgbm==4.6.0",
    "xgboost==2.0.3; python_version < '3.10'",
    "xgboost==2.0.3; python_version >= '3.10'",
    "catboost==1.2.7",
    "pygam==0.10.1",
    "optuna==4.5.0",
    "imbalanced-learn==0.11.0",
    "scikit-learn-extra==0.3.0",
    "xbooster==0.2.2; python_version < '3.10'",
    "xbooster==0.2.6; python_version >= '3.10'",
    "pydantic==1.10.15",
    "nbformat==5.10.4",
    'importlib-resources==5.13.0; python_version < "3.9"'
]

[project.urls]
Homepage = "https://github.com/selimoksuz/risk-model-pipeline"
Documentation = "https://github.com/selimoksuz/risk-model-pipeline#readme"
Repository = "https://github.com/selimoksuz/risk-model-pipeline"
Issues = "https://github.com/selimoksuz/risk-model-pipeline/issues"

[project.scripts]
risk-pipeline = "risk_pipeline.cli:main"

[project.optional-dependencies]
dev = [
    "pytest==8.4.2",
    "pytest-cov==7.0.0",
    "black==24.8.0",
    "isort==5.13.2",
    "flake8==7.1.0",
    "mypy==1.11.1",
    "pre-commit==3.7.1",
    "twine==5.1.1",
    "wheel==0.43.0",
    "build==1.2.1",
]
[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]
include = ["risk_pipeline*"]

[tool.setuptools.dynamic]
version = {attr = "risk_pipeline._version.__version__"}
[tool.setuptools.package-data]
"risk_pipeline.data.sample" = ["credit_risk/*.csv"]


[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 100

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_functions = ["test_*"]
addopts = "-v --cov=risk_pipeline --cov-report=term-missing"
filterwarnings = [
    "ignore:is_sparse is deprecated:DeprecationWarning",
    "ignore:is_categorical_dtype is deprecated:DeprecationWarning",
    "ignore:Downcasting object dtype arrays on .fillna:FutureWarning",
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true





